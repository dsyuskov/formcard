{"version":3,"sources":["ui/form/cmp-form.js","serviceWorker.js","index.js"],"names":["FormCard","state","cardNumberItem","cardNumberForm","cardHolder","cardExpiresMonth","cardExpiresYear","cardCVV","isFront","selected","handleCardNumber","bind","handleCardHolder","handleCardExpiresMonth","handleCardExpiresYear","handleFocus","handleFocusCVV","handleCardCVV","element","this","setState","event","onlyNumber","RegExp","target","value","split","join","newCardNumberForm","newCardNumberItem","test","length","i","onlyLetter","newCardHolder","toUpperCase","newCardExpiresMonth","newCardExpiresYear","newCardCVV","className","htmlFor","type","id","onChange","onFocus","onBlur","disabled","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3bef1ad.chunk.js","sourcesContent":["import React from 'react';\nimport '../../styles/main.scss';\n\nexport default class FormCard extends React.Component {\n  constructor() {\n    super();\n    this.handleCardNumber = this.handleCardNumber.bind(this);\n    this.handleCardHolder = this.handleCardHolder.bind(this);\n    this.handleCardExpiresMonth = this.handleCardExpiresMonth.bind(this);\n    this.handleCardExpiresYear = this.handleCardExpiresYear.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleFocusCVV = this.handleFocusCVV.bind(this);\n    this.handleCardCVV = this.handleCardCVV.bind(this);\n    \n  }\n  state = {\n    cardNumberItem: '#### #### #### ####',\n    cardNumberForm: '',\n    cardHolder: 'FULL NAME',\n    cardExpiresMonth: 'MM',\n    cardExpiresYear: 'YY',\n    cardCVV: '',\n    isFront: true,\n    selected: '',\n  }\n\n  handleFocus(element) {\n    this.setState({selected: element})\n  }\n\n  handleFocusCVV() {\n    this.setState({isFront: !this.state.isFront})\n  }\n\n  handleCardNumber(event) {\n    let onlyNumber = new RegExp(\"^([0-9])*$\");\n    let cardNumberForm = event.target.value.split(' ').join('');\n    let newCardNumberForm = '';\n    let newCardNumberItem = '';\n\n    if (!onlyNumber.test(cardNumberForm)) {\n      return;\n    }\n\n    if (cardNumberForm.length > 16) {\n      return;\n    }\n\n    for (let i = 0; i < 16; i++) {\n      \n      if (i < cardNumberForm.length) {\n        newCardNumberForm += cardNumberForm[i];\n        newCardNumberItem += cardNumberForm[i];\n\n        if (i === 3 || i === 7 || i === 11 ) {\n          if (i !== cardNumberForm.length - 1) {\n            newCardNumberForm = newCardNumberForm + ' ';\n          }\n          newCardNumberItem = newCardNumberItem + ' ';\n        }\n      } else {\n        newCardNumberItem = newCardNumberItem + '#';\n        if (i === 3 || i === 7 || i === 11 ) {\n          newCardNumberItem = newCardNumberItem + ' ';\n        }\n      }\n    }\n    this.setState({ cardNumberForm: newCardNumberForm, cardNumberItem: newCardNumberItem });\n  }\n\n  handleCardHolder(event) {\n    let onlyLetter = new RegExp(\"^([A-z ])+$\"); \n    let newCardHolder = event.target.value.toUpperCase();\n    if (!newCardHolder.length) {\n      newCardHolder = 'FULL NAME';\n    }\n    if (onlyLetter.test(newCardHolder)) {\n      this.setState({ cardHolder: newCardHolder });\n    }\n  }\n\n  handleCardExpiresMonth(event) {\n    let newCardExpiresMonth = event.target.value;\n    this.setState({ cardExpiresMonth: newCardExpiresMonth });\n  }\n\n  handleCardExpiresYear(event) {\n    let newCardExpiresYear = event.target.value;\n    this.setState({ cardExpiresYear: newCardExpiresYear });\n  }\n\n  handleCardCVV(event) {\n    let onlyNumber = new RegExp(\"^([0-9])*$\");\n    let cardCVV = event.target.value;\n    let newCardCVV = '';\n\n    if (!onlyNumber.test(cardCVV) || cardCVV.length > 3) {\n      return;\n    }\n\n    newCardCVV = cardCVV;\n\n    this.setState({cardCVV: newCardCVV});\n  }\n\n  render() {\n    const { cardNumberForm, cardNumberItem, cardHolder, cardCVV,\n      selected, cardExpiresMonth, cardExpiresYear, isFront } = this.state;\n    return (\n      <div className=\"card\">\n        <div className={`card-item ${isFront ? '' : 'rotate'}`}>\n          <div className=\"card-item__front\">\n            <label\n              htmlFor = \"card-number\" \n              className = {`card-item__number ${ selected === 'cardNumber' ? 'selected' : '' }`}\n            >{ cardNumberItem }\n            </label>\n            <label\n              htmlFor=\"card-holder\"\n              className = {`card-item__holder-wrapper ${ selected === 'cardHolder' ? 'selected' : '' }`}\n            >\n              <span className=\"card-item__field-caption\">Card Holder</span>\n              <span className=\"card-item__holder\">{ cardHolder }</span>\n            </label>\n            <div \n              className = {`card-item__expires-wrapper ${ selected === 'cardExpires' ? 'selected' : '' }`}\n            >\n              <label htmlFor=\"card-expires-month\">\n                <span className=\"card-item__field-caption\">Expires</span>\n              </label>\n              <label htmlFor=\"card-expires-month\">\n                <span className=\"card-item__expires\">{ cardExpiresMonth }</span>\n              </label>\n              <span>/</span>\n              <label htmlFor=\"card-expires-year\">\n                <span className=\"card-item__expires\">{ cardExpiresYear }</span>\n              </label>\n            </div>\n          </div>\n          <div className = \"card-item__back\">\n            <div className=\"card-item__magnet\"></div>\n            <div className=\"card-item__cvv\">{ cardCVV }\n\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-form\">\n          <div className=\"card-form__number card-form__row\">\n            <label className=\"card-form__caption\">Card Number</label>\n            <input\n              type = \"text\"\n              id = \"card-number\"\n              className = \"card-form__input\"\n              onChange = { this.handleCardNumber }\n              onFocus = { () => this.handleFocus('cardNumber') }\n              onBlur =  { () => this.handleFocus('') }\n              value = { cardNumberForm }\n            />\n          </div>\n          <div className=\"card-form__holder card-form__row\">\n            <label className=\"card-form__caption\">Card Holders</label>\n            <input\n              type = \"text\"\n              id = \"card-holder\"\n              className = \"card-form__input\"\n              onChange = { this.handleCardHolder }\n              onFocus = { () => this.handleFocus('cardHolder') }\n              onBlur =  { () => this.handleFocus('') }\n              value = { cardHolder === 'FULL NAME' ? '' : cardHolder }\n            />\n          </div>\n          <div className=\"card-form__end-row card-form__row\">\n            <div\n              className=\"card-form__expires\"\n              onFocus = { () => this.handleFocus('cardExpires') }\n              onBlur =  { () => this.handleFocus('') }\n            >\n              <label className=\"card-form__caption\">Expires Date</label>\n              <div className=\"card-form__expires-container\" id=\"card-expires\">\n                <select\n                  id = \"card-expires-month\"\n                  className = \"card-form__input card-form__select\"\n                  onChange = { this.handleCardExpiresMonth }\n                  value = { cardExpiresMonth }\n                >\n                  <option value=\"MM\" disabled=\"disabled\" selected=\"selected\">Month</option>\n                  <option value=\"01\">01</option>\n                  <option value=\"02\">02</option>\n                  <option value=\"03\">03</option>\n                  <option value=\"04\">04</option>\n                  <option value=\"05\">05</option>\n                  <option value=\"06\">06</option>\n                  <option value=\"07\">07</option>\n                  <option value=\"08\">08</option>\n                  <option value=\"09\">09</option>\n                  <option value=\"10\">10</option>\n                  <option value=\"11\">11</option>\n                  <option value=\"12\">12</option>\n                </select>\n                <select \n                  id = \"card-expires-year\"\n                  className = \"card-form__input card-form__select\"\n                  onChange = { this.handleCardExpiresYear }\n                  value = { cardExpiresYear }\n                  >\n                    <option value=\"YY\" disabled=\"disabled\" selected=\"selected\">Year</option>\n                    <option value=\"20\">2020</option>\n                    <option value=\"21\">2021</option>\n                    <option value=\"22\">2022</option>\n                    <option value=\"23\">2023</option>\n                    <option value=\"24\">2024</option>\n                    <option value=\"25\">2025</option>\n                    <option value=\"26\">2026</option>\n                    <option value=\"27\">2027</option>\n                    <option value=\"28\">2028</option>\n                    <option value=\"29\">2029</option>\n                    <option value=\"30\">2030</option>\n                  </select>\n              </div>\n            </div>\n            <div className=\"card-form__cvv\">\n              <label className=\"card-form__caption\">CVV</label>\n              <input \n                type = \"text\"\n                id = \"card-cvv\"\n                className = \"card-form__input\"\n                onFocus = { this.handleFocusCVV }\n                onBlur =  { this.handleFocusCVV }\n                onChange = { this.handleCardCVV }\n                value = { cardCVV }\n              />\n            </div>\n          </div>\n          <input type=\"button\" className=\"card-form__button\" value=\"Submit\"></input>\n        </div>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from './ui/form/cmp-form';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Form />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}